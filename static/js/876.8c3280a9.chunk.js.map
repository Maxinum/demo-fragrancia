{"version":3,"file":"static/js/876.8c3280a9.chunk.js","mappings":"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","sources":["pages/Profile.js","../node_modules/@mui/material/styles/cssUtils.js","../node_modules/@mui/material/Skeleton/skeletonClasses.js","../node_modules/@mui/material/Skeleton/Skeleton.js"],"sourcesContent":["import React from 'react';\r\nimport Skeleton from '@mui/material/Skeleton';\r\n\r\nconst Profile = () => {\r\n    const item = false;\r\n    return (\r\n        item ? (\r\n\r\n            <div style={{ width: '80vw', height: '75vh', marginLeft: 'auto', marginRight: 'auto', marginTop: '2rem', display: 'flex', flexDirection: 'column', gap: '2rem' }} >\r\n                <div style={{ background: '#fff', width: '100%', height: '35%', borderRadius: '10px' }}>\r\n\r\n                </div>\r\n                <div style={{ display: 'flex', height: '60%', width: '100%', gap: '3rem' }}>\r\n                    <div style={{ background: '#fff', width: '25%', borderRadius: '10px' }}>\r\n\r\n                    </div>\r\n                    <div style={{ background: '#fff', width: '75%', borderRadius: '10px' }}>\r\n\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        ) : (\r\n            <div style={{ width: '80vw', height: '75vh', marginLeft: 'auto', marginRight: 'auto', marginTop: '2rem', display: 'flex', flexDirection: 'column', gap: '2rem' }} >\r\n                <Skeleton width={'100%'} height={'35%'} sx={{borderRadius: '10px' }} animation=\"wave\" variant=\"rectangular\" />\r\n                <div style={{ display: 'flex', height: '60%', width: '100%', gap: '3rem' }}>\r\n                    <Skeleton width={'25%'} height={'100%'}  sx={{borderRadius: '10px' }} animation=\"wave\" variant=\"rectangular\" />\r\n                    <Skeleton sx={{ width: '75%',height:'100%', borderRadius: '10px' }} animation=\"wave\" variant=\"rectangular\" />\r\n                </div>\r\n            </div >\r\n        )\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default Profile;\r\n","export function isUnitless(value) {\n  return String(parseFloat(value)).length === String(value).length;\n}\n\n// Ported from Compass\n// https://github.com/Compass/compass/blob/master/core/stylesheets/compass/typography/_units.scss\n// Emulate the sass function \"unit\"\nexport function getUnit(input) {\n  return String(input).match(/[\\d.\\-+]*\\s*(.*)/)[1] || '';\n}\n\n// Emulate the sass function \"unitless\"\nexport function toUnitless(length) {\n  return parseFloat(length);\n}\n\n// Convert any CSS <length> or <percentage> value to any another.\n// From https://github.com/KyleAMathews/convert-css-length\nexport function convertLength(baseFontSize) {\n  return (length, toUnit) => {\n    const fromUnit = getUnit(length);\n\n    // Optimize for cases where `from` and `to` units are accidentally the same.\n    if (fromUnit === toUnit) {\n      return length;\n    }\n\n    // Convert input length to pixels.\n    let pxLength = toUnitless(length);\n    if (fromUnit !== 'px') {\n      if (fromUnit === 'em') {\n        pxLength = toUnitless(length) * toUnitless(baseFontSize);\n      } else if (fromUnit === 'rem') {\n        pxLength = toUnitless(length) * toUnitless(baseFontSize);\n      }\n    }\n\n    // Convert length in pixels to the output unit\n    let outputLength = pxLength;\n    if (toUnit !== 'px') {\n      if (toUnit === 'em') {\n        outputLength = pxLength / toUnitless(baseFontSize);\n      } else if (toUnit === 'rem') {\n        outputLength = pxLength / toUnitless(baseFontSize);\n      } else {\n        return length;\n      }\n    }\n    return parseFloat(outputLength.toFixed(5)) + toUnit;\n  };\n}\nexport function alignProperty({\n  size,\n  grid\n}) {\n  const sizeBelow = size - size % grid;\n  const sizeAbove = sizeBelow + grid;\n  return size - sizeBelow < sizeAbove - size ? sizeBelow : sizeAbove;\n}\n\n// fontGrid finds a minimal grid (in rem) for the fontSize values so that the\n// lineHeight falls under a x pixels grid, 4px in the case of Material Design,\n// without changing the relative line height\nexport function fontGrid({\n  lineHeight,\n  pixels,\n  htmlFontSize\n}) {\n  return pixels / (lineHeight * htmlFontSize);\n}\n\n/**\n * generate a responsive version of a given CSS property\n * @example\n * responsiveProperty({\n *   cssProperty: 'fontSize',\n *   min: 15,\n *   max: 20,\n *   unit: 'px',\n *   breakpoints: [300, 600],\n * })\n *\n * // this returns\n *\n * {\n *   fontSize: '15px',\n *   '@media (min-width:300px)': {\n *     fontSize: '17.5px',\n *   },\n *   '@media (min-width:600px)': {\n *     fontSize: '20px',\n *   },\n * }\n * @param {Object} params\n * @param {string} params.cssProperty - The CSS property to be made responsive\n * @param {number} params.min - The smallest value of the CSS property\n * @param {number} params.max - The largest value of the CSS property\n * @param {string} [params.unit] - The unit to be used for the CSS property\n * @param {Array.number} [params.breakpoints]  - An array of breakpoints\n * @param {number} [params.alignStep] - Round scaled value to fall under this grid\n * @returns {Object} responsive styles for {params.cssProperty}\n */\nexport function responsiveProperty({\n  cssProperty,\n  min,\n  max,\n  unit = 'rem',\n  breakpoints = [600, 900, 1200],\n  transform = null\n}) {\n  const output = {\n    [cssProperty]: `${min}${unit}`\n  };\n  const factor = (max - min) / breakpoints[breakpoints.length - 1];\n  breakpoints.forEach(breakpoint => {\n    let value = min + factor * breakpoint;\n    if (transform !== null) {\n      value = transform(value);\n    }\n    output[`@media (min-width:${breakpoint}px)`] = {\n      [cssProperty]: `${Math.round(value * 10000) / 10000}${unit}`\n    };\n  });\n  return output;\n}","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getSkeletonUtilityClass(slot) {\n  return generateUtilityClass('MuiSkeleton', slot);\n}\nconst skeletonClasses = generateUtilityClasses('MuiSkeleton', ['root', 'text', 'rectangular', 'rounded', 'circular', 'pulse', 'wave', 'withChildren', 'fitContent', 'heightAuto']);\nexport default skeletonClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"animation\", \"className\", \"component\", \"height\", \"style\", \"variant\", \"width\"];\nlet _ = t => t,\n  _t,\n  _t2,\n  _t3,\n  _t4;\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { keyframes, css } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha, unstable_getUnit as getUnit, unstable_toUnitless as toUnitless } from '../styles';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getSkeletonUtilityClass } from './skeletonClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    animation,\n    hasChildren,\n    width,\n    height\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, animation, hasChildren && 'withChildren', hasChildren && !width && 'fitContent', hasChildren && !height && 'heightAuto']\n  };\n  return composeClasses(slots, getSkeletonUtilityClass, classes);\n};\nconst pulseKeyframe = keyframes(_t || (_t = _`\n  0% {\n    opacity: 1;\n  }\n\n  50% {\n    opacity: 0.4;\n  }\n\n  100% {\n    opacity: 1;\n  }\n`));\nconst waveKeyframe = keyframes(_t2 || (_t2 = _`\n  0% {\n    transform: translateX(-100%);\n  }\n\n  50% {\n    /* +0.5s of delay between each loop */\n    transform: translateX(100%);\n  }\n\n  100% {\n    transform: translateX(100%);\n  }\n`));\nconst SkeletonRoot = styled('span', {\n  name: 'MuiSkeleton',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], ownerState.animation !== false && styles[ownerState.animation], ownerState.hasChildren && styles.withChildren, ownerState.hasChildren && !ownerState.width && styles.fitContent, ownerState.hasChildren && !ownerState.height && styles.heightAuto];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  const radiusUnit = getUnit(theme.shape.borderRadius) || 'px';\n  const radiusValue = toUnitless(theme.shape.borderRadius);\n  return _extends({\n    display: 'block',\n    // Create a \"on paper\" color with sufficient contrast retaining the color\n    backgroundColor: theme.vars ? theme.vars.palette.Skeleton.bg : alpha(theme.palette.text.primary, theme.palette.mode === 'light' ? 0.11 : 0.13),\n    height: '1.2em'\n  }, ownerState.variant === 'text' && {\n    marginTop: 0,\n    marginBottom: 0,\n    height: 'auto',\n    transformOrigin: '0 55%',\n    transform: 'scale(1, 0.60)',\n    borderRadius: `${radiusValue}${radiusUnit}/${Math.round(radiusValue / 0.6 * 10) / 10}${radiusUnit}`,\n    '&:empty:before': {\n      content: '\"\\\\00a0\"'\n    }\n  }, ownerState.variant === 'circular' && {\n    borderRadius: '50%'\n  }, ownerState.variant === 'rounded' && {\n    borderRadius: (theme.vars || theme).shape.borderRadius\n  }, ownerState.hasChildren && {\n    '& > *': {\n      visibility: 'hidden'\n    }\n  }, ownerState.hasChildren && !ownerState.width && {\n    maxWidth: 'fit-content'\n  }, ownerState.hasChildren && !ownerState.height && {\n    height: 'auto'\n  });\n}, ({\n  ownerState\n}) => ownerState.animation === 'pulse' && css(_t3 || (_t3 = _`\n      animation: ${0} 1.5s ease-in-out 0.5s infinite;\n    `), pulseKeyframe), ({\n  ownerState,\n  theme\n}) => ownerState.animation === 'wave' && css(_t4 || (_t4 = _`\n      position: relative;\n      overflow: hidden;\n\n      /* Fix bug in Safari https://bugs.webkit.org/show_bug.cgi?id=68196 */\n      -webkit-mask-image: -webkit-radial-gradient(white, black);\n\n      &::after {\n        animation: ${0} 1.6s linear 0.5s infinite;\n        background: linear-gradient(\n          90deg,\n          transparent,\n          ${0},\n          transparent\n        );\n        content: '';\n        position: absolute;\n        transform: translateX(-100%); /* Avoid flash during server-side hydration */\n        bottom: 0;\n        left: 0;\n        right: 0;\n        top: 0;\n      }\n    `), waveKeyframe, (theme.vars || theme).palette.action.hover));\nconst Skeleton = /*#__PURE__*/React.forwardRef(function Skeleton(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiSkeleton'\n  });\n  const {\n      animation = 'pulse',\n      className,\n      component = 'span',\n      height,\n      style,\n      variant = 'text',\n      width\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    animation,\n    component,\n    variant,\n    hasChildren: Boolean(other.children)\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(SkeletonRoot, _extends({\n    as: component,\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other, {\n    style: _extends({\n      width,\n      height\n    }, style)\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Skeleton.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The animation.\n   * If `false` the animation effect is disabled.\n   * @default 'pulse'\n   */\n  animation: PropTypes.oneOf(['pulse', 'wave', false]),\n  /**\n   * Optional children to infer width and height from.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Height of the skeleton.\n   * Useful when you don't want to adapt the skeleton to a text element but for instance a card.\n   */\n  height: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The type of content that will be rendered.\n   * @default 'text'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['circular', 'rectangular', 'rounded', 'text']), PropTypes.string]),\n  /**\n   * Width of the skeleton.\n   * Useful when the skeleton is inside an inline element with no width of its own.\n   */\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n} : void 0;\nexport default Skeleton;"],"names":["style","width","height","marginLeft","marginRight","marginTop","display","flexDirection","gap","sx","borderRadius","animation","variant","getUnit","input","String","match","toUnitless","length","parseFloat","getSkeletonUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_t","_t2","_t3","_t4","_excluded","pulseKeyframe","keyframes","waveKeyframe","SkeletonRoot","styled","name","overridesResolver","props","styles","ownerState","root","hasChildren","withChildren","fitContent","heightAuto","theme","radiusUnit","shape","radiusValue","_extends","backgroundColor","vars","palette","Skeleton","bg","alpha","text","primary","mode","marginBottom","transformOrigin","transform","Math","round","content","visibility","maxWidth","css","action","hover","React","inProps","ref","useThemeProps","className","component","other","_objectWithoutPropertiesLoose","Boolean","children","classes","slots","composeClasses","useUtilityClasses","_jsx","as","clsx"],"sourceRoot":""}