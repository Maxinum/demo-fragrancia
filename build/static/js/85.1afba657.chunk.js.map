{"version":3,"file":"static/js/85.1afba657.chunk.js","mappings":"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","sources":["modules/FarmerDetails/components/СlientHistory.js","modules/FarmerDetails/components/СlientInfo.js","modules/FarmerDetails/components/PayBlock.js","modules/FarmerDetails/index.js","pages/Farmer.js"],"sourcesContent":["import { toJS } from 'mobx';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React, { useContext, useEffect, useState, useRef } from 'react';\r\nimport { Context } from '../../..';\r\nimport { addDots } from '../../../helpers/Dotter';\r\nimport { fetchBuffOrders } from '../../Buffer/api';\r\nimport { setClientInfo, setCons, setPayments, setPerfume } from '../../Buffer/helpers/FromBuff';\r\nimport { fetchClientHistory, fetchLastDays } from '../../ClientBlcok/api';\r\n\r\nconst clientHistory = observer((props) => {\r\n\r\n    const { orders, client } = useContext(Context);\r\n    const selectRef = useRef();\r\n    const id = typeof client.selectedClient === 'string' ? client.selectedClient.split(' ')[0] : '';\r\n    const [clientSale, setSale] = useState([]);\r\n    // const [clientSale, setClientSale] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if (client.lastDaysSales.length === 0) {\r\n                fetchLastDays().then(data => client.setlastDaysSales(data.sales));\r\n            }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        fetchClientHistory(id).then(data => client.setSales(data.sales));\r\n    }, [client.selectedClient]);\r\n\r\n    useEffect(() => {\r\n        if (clientSale.length !== 0) {\r\n            console.log(clientSale);\r\n            setClientInfo(orders, client, clientSale.sale);\r\n            setPerfume(orders, clientSale.perfumes)\r\n            setCons(orders, clientSale.disposables);\r\n            setPayments(orders, clientSale.payments);\r\n            orders.setKeyDown(false);\r\n        }\r\n    }, [clientSale]);\r\n\r\n    async function handleKeyDown(event) {\r\n        if (event.key === 'Enter') {\r\n            const selectedOption = selectRef.current.options[selectRef.current.selectedIndex];\r\n            const id = selectedOption.id;\r\n            await fetchBuffOrders(id).then(data => setSale(data));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"history\">\r\n            <div className=\"history_label\">Sales</div>\r\n            <select\r\n                ref={selectRef}\r\n                name=\"\"\r\n                id=\"history\"\r\n                size=\"10\"\r\n                onKeyDown={handleKeyDown}\r\n            >\r\n                {client.selectedClient && client.sales.length > 0 && client.sales.map((value, index) => (\r\n                    <option key={index} id={value.id} >\r\n                        {value.order_date && value.order_date.substring(0, value.order_date.indexOf(\"T\"))} - {addDots(value.total)}\r\n                    </option>\r\n                ))}\r\n                {!client.selectedClient && client.lastDaysSales.map((value, index) => (\r\n                    <option key={index} id={value.id} >\r\n                        {value.order_date && value.order_date.substring(0, value.order_date.indexOf(\"T\"))} - {value.clientId} - {addDots(value.total)}\r\n                    </option>\r\n                ))}\r\n            </select>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default clientHistory;\r\n\r\n","import { observer } from 'mobx-react-lite';\r\nimport React, {useState, useContext} from 'react';\r\nimport { useEffect } from 'react';\r\nimport { Context } from '../../..';\r\nimport { addDots } from '../../../helpers/Dotter';\r\nimport { fetchClientHistory } from '../../ClientBlcok/api';\r\n\r\nconst clientInfo = observer((props) => {\r\n\r\n    const { client } = useContext(Context);\r\n    const id = client.selectedClient && client.selectedClient.trim() !== '' ? client.selectedClient.split(' ')[0] : -1;\r\n    // const [ allclientInfo, setallClientInfo ] = useState([]);\r\n    // const [ clientInfo, setClientInfo ] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetchClientHistory(id).then(data => client.setClientInfo(data.abc));\r\n    }, [client.selectedClient]);\r\n\r\n    const getMonthName = (monthIndex) => {\r\n        const date = new Date(0);\r\n        date.setUTCMonth(monthIndex);\r\n        return date.toLocaleString('default', { month: 'long' });\r\n    }\r\n\r\n    const lastThreeMonths = [\r\n        {name: getMonthName(new Date().getMonth() - 0), total: client.clientInfo.length > 0 && addDots(client.clientInfo[0].total) + 'тг.'},\r\n        {name: getMonthName(new Date().getMonth() - 1), total: client.clientInfo.length > 0 && addDots(client.clientInfo[0].total1) + 'тг.'},\r\n        {name: getMonthName(new Date().getMonth() - 2), total: client.clientInfo.length > 0 && addDots(client.clientInfo[0].total2) + 'тг.'},\r\n        {name: getMonthName(new Date().getMonth() - 3), total: client.clientInfo.length > 0 && addDots(client.clientInfo[0].total3) + 'тг.'},\r\n    ];\r\n    return (\r\n        <div className='card'>\r\n            <div className=\"history_label\">Customer Information</div>\r\n            <div className=\"card__content\">\r\n                <div style={{width: '100%'}}>\r\n                    <div>ABC-XYZ:</div>\r\n                    <div id=\"abc-xyz\">{client.clientInfo.length > 0 && client.clientInfo[0].abc_xyz}</div>\r\n                </div>\r\n                {lastThreeMonths.map(month => (\r\n                    <div key={month.name}>\r\n                        <div className=\"month\">{month.name + ':'}</div>\r\n                        <div className=\"totalclient\">{month.total}</div>\r\n                    </div>\r\n                ))}\r\n                <textarea placeholder=\"Comment...\" id=\"card_comment\"\r\n                    cols=\"15\" rows=\"5\"></textarea>\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default clientInfo;","import { toJS } from 'mobx';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React, { useContext, useEffect, useState, useRef } from 'react';\r\nimport { Context } from '../../..';\r\nimport { getPayments } from '../../../APIs/OrderAPI';\r\nimport { addDots } from '../../../helpers/Dotter';\r\nimport { setClientInfo, setCons, setPayments, setPerfume } from '../../Buffer/helpers/FromBuff';\r\nimport { fetchClientHistory, fetchLastDays } from '../../ClientBlcok/api';\r\n\r\nconst PayBlock = observer((props) => {\r\n\r\n    const { orders, client } = useContext(Context);\r\n    const selectRef = useRef();\r\n    const id = typeof client.selectedClient === 'string' ? client.selectedClient.split(' ')[0] : '';\r\n    const [clientPayments, setClientPayments] = useState([]);\r\n    useEffect(() => {\r\n        if (client.lastDaysPayments.length === 0) {\r\n            fetchLastDays().then(data => client.setlastDaysPayments(data.payments));\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        fetchClientHistory(id).then(data => client.setPayments(data.payments));\r\n    }, [client.selectedClient]);\r\n\r\n    useEffect(() => {\r\n        if (clientPayments.length !== 0) {\r\n            console.log(clientPayments);\r\n            setClientInfo(orders, client, clientPayments.sale);\r\n            setPerfume(orders, clientPayments.perfumes)\r\n            setCons(orders, clientPayments.disposables);\r\n            setPayments(orders, clientPayments.payments);\r\n            orders.setKeyDown(false);\r\n        }\r\n    }, [clientPayments]);\r\n\r\n\r\n    async function handleKeyDown(event) {\r\n        if (event.key === 'Enter') {\r\n            const selectedOption = selectRef.current.options[selectRef.current.selectedIndex];\r\n            const id = selectedOption.id;\r\n            await getPayments(id).then(data => setClientPayments(data));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"history\">\r\n            <div className=\"payment_label\">Payments</div>\r\n            <select \r\n            ref={selectRef}\r\n            name=\"\" \r\n            id=\"payment\" \r\n            size=\"10\"\r\n            onKeyDown={handleKeyDown}\r\n            >\r\n                {client.selectedClient && client.payments.length > 0 && client.payments.map((value, index) => (\r\n                    <option key={index} id={value.id}>\r\n                        {value.createdAt && value.createdAt.substring(0, value.createdAt.indexOf(\"T\"))} - {addDots(value.sum)}\r\n                    </option>\r\n                ))}\r\n                {!client.selectedClient && client.lastDaysPayments.map((value, index) => (\r\n                    <option key={index} id={value.id} >\r\n                        {value.createdAt && value.createdAt.substring(0, value.createdAt.indexOf(\"T\"))} - {value.client} - {addDots(value.sum)}\r\n                    </option>\r\n                ))}\r\n            </select>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default PayBlock;","import React from 'react';\r\nimport СlientHistory from './components/СlientHistory';\r\nimport СlientInfo from './components/СlientInfo';\r\nimport PayBlock from './components/PayBlock';\r\nimport './style.css'\r\n\r\nconst FarmerDetails = () => {\r\n    return (\r\n        <div className='left'>\r\n            <СlientInfo />\r\n            <СlientHistory />\r\n            <PayBlock />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FarmerDetails;","import React, { useContext, useEffect } from 'react';\r\nimport Buffer from '../modules/Buffer';\r\nimport AromatsTable from '../modules/AromatsTable';\r\nimport FarmerDetails from '../modules/FarmerDetails'\r\nimport SecondTable from '../modules/AccessorTable';\r\n// import InfoBlock from '../components/InfoBlock/InfoBlock';\r\nimport { observer } from \"mobx-react-lite\";\r\nimport PaymentBlock from '../components/PaymentBlock/PaymentBlock';\r\nimport PaymentTable from '../modules/PaymentTable';\r\nimport Buttons from '../components/Buttons';\r\nimport { Context } from \"../index\";\r\nimport InfoBlock from '../modules/ClientBlcok';\r\n\r\nconst Farmer = observer(() => {\r\n    const store = useContext(Context);\r\n    \r\n    return (\r\n        <div>\r\n            <div style={{\r\n                position: 'relative',\r\n                display: 'flex',\r\n                flexDirection: 'row',\r\n                justifyContent: 'space-between',\r\n                alignContent: 'center',\r\n                alignItems: 'flex-start',\r\n            }}>\r\n                <FarmerDetails />\r\n                <div>\r\n                    <InfoBlock />\r\n                    <AromatsTable data={store} name='Fragrances' />\r\n                    <SecondTable name='Accessories' />\r\n                    <PaymentBlock />\r\n                    <PaymentTable />\r\n                    <Buttons/>\r\n                </div>\r\n                <Buffer />\r\n            </div>\r\n        </div >\r\n    );\r\n});\r\n\r\nexport default Farmer;\r\n"],"names":["clientHistory","observer","props","useContext","Context","orders","client","selectRef","useRef","id","selectedClient","split","useState","clientSale","setSale","event","key","selectedOption","current","options","selectedIndex","fetchBuffOrders","then","data","useEffect","lastDaysSales","length","fetchLastDays","setlastDaysSales","sales","fetchClientHistory","setSales","console","log","setClientInfo","sale","setPerfume","perfumes","setCons","disposables","setPayments","payments","setKeyDown","className","ref","name","size","onKeyDown","map","value","index","order_date","substring","indexOf","addDots","total","clientId","trim","abc","getMonthName","monthIndex","date","Date","setUTCMonth","toLocaleString","month","lastThreeMonths","getMonth","clientInfo","total1","total2","total3","style","width","abc_xyz","placeholder","cols","rows","PayBlock","clientPayments","setClientPayments","getPayments","lastDaysPayments","setlastDaysPayments","createdAt","sum","store","position","display","flexDirection","justifyContent","alignContent","alignItems","AromatsTable","PaymentBlock","PaymentTable","Buttons","Buffer"],"sourceRoot":""}